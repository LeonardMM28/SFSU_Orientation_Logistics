{"ast":null,"code":"import React,{useEffect,useState}from\"react\";// Import React hooks\nimport\"./CreateUser.css\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CreateUser(){const[username,setUsername]=useState(\"\");const[userId,setUserId]=useState(\"\");const[userTier,setUserTier]=useState(\"\");const navigate=useNavigate();useEffect(()=>{const checkAuthorization=async()=>{try{const response=await fetch(\"http://localhost:3000/auth-check\",{method:\"GET\",headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});if(response.status===401){// Invalid or expired token, show unauthorized message and delete session\nalert(\"Your session has expired, please log in again.\");const token=localStorage.getItem(\"token\");if(token){localStorage.removeItem(\"token\");await axios.post(\"http://localhost:3000/logout\",null,{headers:{Authorization:\"Bearer \".concat(token)}});}navigate(\"/\");}else{// Token is valid, check user tier\nconst decodedToken=JSON.parse(atob(localStorage.getItem(\"token\").split(\".\")[1]));const response=await axios.get(\"http://localhost:3000/getUser/\".concat(decodedToken.userId));const userTier=response.data.tier;if(userTier!==\"2\"){// User does not have the required tier, show unauthorized message and delete session\nconst token=localStorage.getItem(\"token\");if(token){localStorage.removeItem(\"token\");await axios.post(\"http://localhost:3000/logout\",null,{headers:{Authorization:\"Bearer \".concat(token)}});}navigate(\"/\");alert(\"You are not authorized to access this page.\");}else{// Both token and user tier are valid, continue with the component\nconst decodedToken=JSON.parse(atob(localStorage.getItem(\"token\").split(\".\")[1]));setUsername(decodedToken.username);setUserId(decodedToken.userId);setUserTier(userTier);}}}catch(error){console.error(\"Error checking authorization:\",error);}};checkAuthorization();},[navigate]);useEffect(()=>{const getUsernameAndTierFromToken=async()=>{const token=localStorage.getItem(\"token\");if(token){try{const decodedToken=JSON.parse(atob(token.split(\".\")[1]));setUsername(decodedToken.username);setUserId(decodedToken.userId);const response=await axios.get(\"http://localhost:3000/getUser/\".concat(decodedToken.userId));setUserTier(response.data.tier);// Assuming your backend sends back user's tier\n}catch(error){console.error(\"Error fetching user information:\",error);}}};getUsernameAndTierFromToken();},[]);// useEffect(() => {\n//   if (userTier !== \"2\") {\n//     //SHOW A UNAUTHORIZED BROWSER MESSAGE\n//     localStorage.removeItem(\"token\");\n//     navigate(\"/\");\n//     alert(\"You are not authorized to access this page.\");\n//   }\n// }, [userTier, navigate]);\nconst[formData,setFormData]=useState({username:\"\",password:\"\",confirmPassword:\"\"});const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();const{username,password,confirmPassword}=formData;if(password!==confirmPassword){alert(\"Passwords do not match!\");return;}try{const response=await axios.post(\"http://localhost:3000/newUser\",{username,password});if(response.status===200){navigate(\"/\");}}catch(error){console.error(\"Error creating user:\",error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"create-user-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"create-user-form-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/NSFPlogo.png\",alt:\"Rotaract at SFSU Logo\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Create a new account\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Account\"})]})]})});}export default CreateUser;","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","CreateUser","username","setUsername","userId","setUserId","userTier","setUserTier","navigate","checkAuthorization","response","fetch","method","headers","Authorization","concat","localStorage","getItem","status","alert","token","removeItem","post","decodedToken","JSON","parse","atob","split","get","data","tier","error","console","getUsernameAndTierFromToken","formData","setFormData","password","confirmPassword","handleChange","e","target","name","value","handleSubmit","preventDefault","className","children","src","alt","onSubmit","htmlFor","type","id","onChange"],"sources":["/Users/leonardomm/Desktop/SFSU/TL/SFSU_Orientation_2024_Logistics/App/src/CreateUser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; // Import React hooks\nimport \"./CreateUser.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CreateUser() {\n    const [username, setUsername] = useState(\"\");\n    const [userId, setUserId] = useState(\"\");\n    const [userTier, setUserTier] = useState(\"\");\n  const navigate = useNavigate();\n\nuseEffect(() => {\n  const checkAuthorization = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/auth-check\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n      if (response.status === 401) {\n        // Invalid or expired token, show unauthorized message and delete session\n                alert(\"Your session has expired, please log in again.\");\n\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          localStorage.removeItem(\"token\");\n          await axios.post(\"http://localhost:3000/logout\", null, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n        }\n        \n        navigate(\"/\");\n      } else {\n        // Token is valid, check user tier\n        const decodedToken = JSON.parse(\n          atob(localStorage.getItem(\"token\").split(\".\")[1])\n        );\n        const response = await axios.get(\n          `http://localhost:3000/getUser/${decodedToken.userId}`\n        );\n        const userTier = response.data.tier;\n        if (userTier !== \"2\") {\n          // User does not have the required tier, show unauthorized message and delete session\n          const token = localStorage.getItem(\"token\");\n          if (token) {\n            localStorage.removeItem(\"token\");\n            await axios.post(\"http://localhost:3000/logout\", null, {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            });\n          }\n          navigate(\"/\");\n          alert(\"You are not authorized to access this page.\");\n        } else {\n          // Both token and user tier are valid, continue with the component\n          const decodedToken = JSON.parse(\n            atob(localStorage.getItem(\"token\").split(\".\")[1])\n          );\n          setUsername(decodedToken.username);\n          setUserId(decodedToken.userId);\n          setUserTier(userTier);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error checking authorization:\", error);\n    }\n  };\n\n  checkAuthorization();\n}, [navigate]);\n\n\n\n  useEffect(() => {\n    const getUsernameAndTierFromToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\n          setUsername(decodedToken.username);\n          setUserId(decodedToken.userId);\n          const response = await axios.get(\n            `http://localhost:3000/getUser/${decodedToken.userId}`\n          );\n          setUserTier(response.data.tier); // Assuming your backend sends back user's tier\n        } catch (error) {\n          console.error(\"Error fetching user information:\", error);\n        }\n      }\n    };\n\n    getUsernameAndTierFromToken();\n  }, []);\n\n    // useEffect(() => {\n    //   if (userTier !== \"2\") {\n    //     //SHOW A UNAUTHORIZED BROWSER MESSAGE\n    //     localStorage.removeItem(\"token\");\n    //     navigate(\"/\");\n    //     alert(\"You are not authorized to access this page.\");\n    //   }\n    // }, [userTier, navigate]);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { username, password, confirmPassword } = formData;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:3000/newUser\", {\n        username,\n        password,\n      });\n      if (response.status === 200) {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n    }\n  };\n\n  return (\n    <div className=\"create-user-page\">\n      <div className=\"create-user-form-container\">\n        <img src=\"/NSFPlogo.png\" alt=\"Rotaract at SFSU Logo\" />\n        <h2>Create a new account</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n            />\n          </div>\n          <button type=\"submit\">Create Account</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}